#include <bits/stdc++.h>

using namespace std;
using ll=long long;
#define pb push_back

int n, u;
int a[1000][1000], d[1000], truoc[1000];
vector<int> tam;

void input()
{
	cin>>n>>u;
	for (int i=1;i<=n;i++)
	{
		for (int j=1;j<=n;j++)
		{
			cin>>a[i][j];
			if (!a[i][j])
				a[i][j]=1e9;
		}
	}
}

void bellmanFord(int u)
{
	for (int i=1;i<=n;i++)
	{
		d[i]=a[u][i];	
		truoc[i]=u;
	}
	d[u]=0; int k=1;
	while (k<=n-2)
	{
		for (int i=1;i<=n;i++)
		{
			if (i!=u)
			{
				for (int j=1;j<=n;j++)
				{
					if (j!=u)
					{
						if (d[i]>d[j]+a[j][i])
						{
							d[i]=d[j]+a[j][i];
							truoc[i]=j;
						}
					}
				}
			}
		}
		k++;
	}
}

void solve()
{
	for (int i=1;i<=n;i++)
	{
		if (d[i]>=1e8)
			cout<<"K/c "<<u<<" -> "<<i<<" = INF;\n";
		else
		{
			cout<<"K/c "<<u<<" -> "<<i<<" = "<<d[i]<<"; ";
			int t=truoc[i];
			cout<<i<<" <- ";
			while (t!=u)
			{
				cout<<t<<" <- ";
				t=truoc[t];
			}
			cout<<u<<endl;
		}
	}
}

int main()
{
	input();
	bellmanFord(u);
	solve();
	return 0;
}
